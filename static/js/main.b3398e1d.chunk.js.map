{"version":3,"sources":["Message.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["Message","message","isUser","username","className","Card","CardContent","Typography","color","variant","component","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","input","setInput","messages","setMessages","setUsername","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","prompt","class","src","alt","FormControl","InputLabel","Input","value","onChange","event","target","Button","disabled","type","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","text","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUA0BeA,MAtBf,YAAuC,IAApBC,EAAmB,EAAnBA,QACTC,EAD4B,EAAXC,WACIF,EAAQE,SAEnC,OACI,qBAAMC,UAAS,kBAAaF,GAAU,iBAAtC,SACE,cAACG,EAAA,EAAD,CAAMD,UAAWF,EAAS,oBAAqB,qBAA/C,SACE,cAACI,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CACAC,MAAM,QACNC,QAAQ,KACRC,UAAU,KAHV,WAKOR,GAAD,UAAcD,EAAQE,UAAY,eAAlC,KALN,IAK4DF,EAAQA,kB,QCFnEU,EAXEC,IAASC,cAAe,CACvCC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGIC,Y,QC0DRC,MA/Df,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEmBF,mBAAS,IAF5B,mBAENG,EAFM,KAEIC,EAFJ,OAGmBJ,mBAAS,IAH5B,mBAGNpB,EAHM,KAGIyB,EAHJ,KA4Bb,OAvBAC,qBAAU,WACRlB,EAAGmB,WAAW,YACXC,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACXN,EAAYM,EAASC,KAAKC,KAAI,SAAAC,GAAG,OAAEA,EAAIC,gBAE1C,IAEHR,qBAAU,WACRD,EAAYU,OAAO,6BAClB,IAcD,sBAAKlC,UAAU,MAAf,UACE,qBAAKmC,MAAM,kBAAiBC,IAAI,kJAAkJC,IAAI,mBACtL,+CACC,0CAAY,sBAAMrC,UAAU,kBAAhB,SAAmCD,IAA/C,2BAED,sBAAMC,UAAU,YAAhB,SACE,eAACsC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,8BACA,cAACC,EAAA,EAAD,CACEC,MAAOrB,EACPsB,SAAU,SAACC,GAAD,OAAWtB,EAASsB,EAAMC,OAAOH,UAE7C,cAACI,EAAA,EAAD,CACEC,UAAW1B,EACXf,QAAQ,YACRD,MAAM,UACN2C,KAAK,SACLC,QA7BU,SAACL,GACnBA,EAAMM,iBAEN1C,EAAGmB,WAAW,YAAYwB,IAAI,CAC5BrD,QAASuB,EACTrB,SAAUA,EACVoD,UAAW3C,IAASS,UAAUmC,WAAWC,oBAE3C9B,EAAY,GAAD,mBAAKD,GAAL,CAAe,CAAEvB,SAAUA,EAAUuD,KAAMlC,MACtDC,EAAS,KAeH,+BAWJ,cAAC,IAAD,UAEIC,EAASS,KAAI,SAAAlC,GAAO,OAChB,cAAC,EAAD,CAAUE,SAAUA,EAAUF,QAASA,aCnDtC0D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b3398e1d.chunk.js","sourcesContent":["import { Card, CardContent, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport './Message.css';\r\n\r\nfunction  Message({message,username}) {\r\n    const isUser = username=== message.username;\r\n\r\n    return (\r\n        <div  className={`message ${isUser && 'message__user'}`}>\r\n          <Card className={isUser ? \"message__userCard\" :\"message__guestCard\"} >\r\n            <CardContent>\r\n                <Typography\r\n                color=\"white\"\r\n                variant=\"h5\"\r\n                component=\"h2\"\r\n                >\r\n                     {!isUser && `${message.username || 'Unknown User'}:`} {message.message}\r\n\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Message\r\n\r\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from \"firebase\"\r\n\r\nconst firebaseApp =firebase.initializeApp( {\r\n    apiKey: \"AIzaSyA8ybEiKx3-Q8QuosepLZsOp38yBLi0VCY\",\r\n    authDomain: \"messenger-app-c5199.firebaseapp.com\",\r\n    projectId: \"messenger-app-c5199\",\r\n    storageBucket: \"messenger-app-c5199.appspot.com\",\r\n    messagingSenderId: \"355522744444\",\r\n    appId: \"1:355522744444:web:05e66d03aea4943abd79f9\",\r\n    measurementId: \"G-JYTZBN6VHV\"\r\n  });\r\n\r\n  const db=firebaseApp.firestore();\r\n  export default db;","import { Button, FormControl, InputLabel, Input } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Message from \"./Message\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\nimport FlipMove from \"react-flip-move\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [username, setUsername] = useState('');\n\n  useEffect(() => {\n    db.collection(\"messages\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setMessages(snapshot.docs.map(doc=>doc.data()));\n      });\n  }, []);\n\n  useEffect(() => {\n    setUsername(prompt(\"please enter your name\"));\n  }, []);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n\n    db.collection(\"messages\").add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setMessages([...messages, { username: username, text: input }]);\n    setInput(\"\");\n  };\n  return (\n    <div className=\"App\">\n      <img class=\"logo__messenger\"src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/b/be/Facebook_Messenger_logo_2020.svg/800px-Facebook_Messenger_logo_2020.svg.png?w=10&h=10\" alt=\"mesenger__logo\"/>\n      <h1>Messenger App</h1>\n       <h1>Welcome <span className=\"userName__style\">{username}</span> to the Messenger App</h1>\n\n      <form className=\"app__form\">\n        <FormControl>\n          <InputLabel>Enter a message</InputLabel>\n          <Input\n            value={input}\n            onChange={(event) => setInput(event.target.value)}\n          />\n          <Button\n            disabled={!input}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            onClick={sendMessage}\n          >\n            send message\n          </Button>\n        </FormControl>\n      </form>\n      <FlipMove>\n        {\n          messages.map(message=> (\n              <Message  username={username} message={message} />\n           ))\n        }\n      </FlipMove>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}